"use strict";(self.webpackChunk_feasibleone_blong_docs=self.webpackChunk_feasibleone_blong_docs||[]).push([[6765],{3117:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>i});var r=t(9541),a=t(8991);const s={},o="Realm",l={id:"patterns/realm",title:"Realm",description:"To define a realm use the realm function from the framework.",source:"@site/docs/patterns/realm.md",sourceDirName:"patterns",slug:"/patterns/realm",permalink:"/blong-docs/docs/patterns/realm",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Orchestrator",permalink:"/blong-docs/docs/patterns/orchestrator"},next:{title:"REST",permalink:"/blong-docs/docs/patterns/rest"}},c={},i=[];function d(e){const n={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"realm",children:"Realm"}),"\n",(0,r.jsxs)(n.p,{children:["To define a ",(0,r.jsx)(n.a,{href:"/blong-docs/docs/concepts/realm",children:"realm"})," use the ",(0,r.jsx)(n.code,{children:"realm"})," function from the framework.\nThe function passed to ",(0,r.jsx)(n.code,{children:"realm"})," must return an object with the following properties:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"url"}),": the URL of the realm"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"validation"}),": validation schema for the realm config"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"children"}),": paths from which to load the layers or other realms"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"...rest"}),": the rest of the properties are used for config activations.\nEach activation contains properties for turning on layers\nor configuring adapters, orchestrators or handlers. For example\nthe property ",(0,r.jsx)(n.code,{children:"test"})," usually activates all layers, that are needed\nduring the automated tests, for example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"{\n    test: {\n        adapter: true,\n        orchestrator: true,\n        gateway: true,\n        test: true\n    }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Or the ",(0,r.jsx)(n.code,{children:"default"})," activation can configure adapter properties:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"{\n    default: {\n        backend: {\n            logLevel: 'fatal'\n        }\n    }\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Realm example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// realmname/server.ts\nimport {realm} from '@feasibleone/blong';\n\nexport default realm(blong => ({\n    url: import.meta.url,\n    validation: blong.type.Object({}),\n    children: ['./adapter'],\n    // config activations\n    default: {},\n    test: {\n        adapter: true\n    },\n    realm: {\n        adapter: true\n    },\n}));\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8991:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>o});var r=t(3981);const a={},s=r.createContext(a);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);
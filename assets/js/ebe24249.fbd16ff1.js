"use strict";(self.webpackChunk_feasibleone_blong_docs=self.webpackChunk_feasibleone_blong_docs||[]).push([[7486],{6812:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>c,frontMatter:()=>t,metadata:()=>l,toc:()=>d});var s=r(9541),a=r(7743);const t={},i="Handler",l={id:"patterns/handler",title:"Handler",description:"Handlers are functions being called by the adapters and orchestrators to",source:"@site/docs/patterns/handler.md",sourceDirName:"patterns",slug:"/patterns/handler",permalink:"/blong-docs/docs/patterns/handler",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Error",permalink:"/blong-docs/docs/patterns/error"},next:{title:"Meta",permalink:"/blong-docs/docs/patterns/meta"}},o={},d=[{value:"Internal handlers",id:"internal-handlers",level:2},{value:"API based handlers",id:"api-based-handlers",level:2},{value:"Library functions",id:"library-functions",level:2},{value:"Folder structure",id:"folder-structure",level:2},{value:"Defining handlers and library functions",id:"defining-handlers-and-library-functions",level:2},{value:"Interoperability",id:"interoperability",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"handler",children:"Handler"}),"\n",(0,s.jsxs)(n.p,{children:["Handlers are functions being called by the adapters and orchestrators to\nimplement certain functionality. Handlers can be based on user defined\nAPI or be related to internal logic, for example the\n",(0,s.jsx)(n.a,{href:"../concepts/adapter#adapter-loop",children:"adapter loop"})]}),"\n",(0,s.jsx)(n.h2,{id:"internal-handlers",children:"Internal handlers"}),"\n",(0,s.jsx)(n.p,{children:"The internal handlers have predefined meaning and names and are often related\nto some common integration tasks. They have the following purpose:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"send"}),": prepare the data for sending, adapting it for the underlying protocol.\nThe input data is assumed to be protocol/API independent as much as possible."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"receive"}),": transform the received data to be protocol/API independent and remove\nany data not needed by the rest of the system."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"encode"}),": JavaScript objects passed to this handlers are converted to Buffer,\nwhich is then passed to the network."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"decode"}),": data frames coming from the network as Buffers are passed to this\nhandler and it converts them to JavaScript objects"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"exec"}),": this handler is called by default if no handler is defined for the ",(0,s.jsx)(n.a,{href:"./meta",children:"$meta"}),".method"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ready"}),": this handler is called when the adapter is ready to process calls,\nwhich for some adapters means that connection has been established or\na TCP port was opened for listening."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"idleSend"}),": this handler is called when there has been an idle period\n(longer than the configured) of no outgoing messages. It usually\nsends some kind of echo/keep alive message available in the protocol."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"idleReceive"}),": this handler is called when there has been an idle period\n(longer than the configured) of no incoming messages. It usually disconnects\nthe adapter as the expectations is that the other side is sending some\nkeep alive messages."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"drainSend"}),": this handler is called when the send queue is emptied or has been\nempty for a pre-configured period. It can be used to trigger processing of\nsome pending operations that happen during the idle time of the adapter."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"api-based-handlers",children:"API based handlers"}),"\n",(0,s.jsxs)(n.p,{children:["The API based handlers usually implement some business functionality.\nThey use namespaces to prefix the names of the API methods. The framework\nworks best when the naming convention for the methods uses a\n",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Semantic_triple",children:"semantic triple"}),"\nin the format ",(0,s.jsx)(n.code,{children:"subjectObjectPredicate"}),", where:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"subject"})," is the namespace and often is same as the name of the\n",(0,s.jsx)(n.a,{href:"../concepts/realm",children:"realm"})," if the realm defines only one namespace."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"object"})," is often some entity within the realm"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"predicate"})," is the action being executed on the entity"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Here are some examples:"}),"\n",(0,s.jsxs)(n.p,{children:["If we have a realm named ",(0,s.jsx)(n.code,{children:"user"})," that has the goal to implement role based\naccess control, we can imagine it has the following namespaces:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"identity"}),": for implementing the authentication"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"permission"}),": for implementing the authorization"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"user"}),": for managing the users and roles. It could\nhave methods for objects named ",(0,s.jsx)(n.code,{children:"user"})," and ",(0,s.jsx)(n.code,{children:"role"}),", for example:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"userUserAdd"})," - for creating users"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"userRoleEdit"})," - for editing roles"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"All handlers are converted to async functions"})}),"\n",(0,s.jsx)(n.h2,{id:"library-functions",children:"Library functions"}),"\n",(0,s.jsx)(n.p,{children:"The library functions implement some reusable functionality, that\nis repeated across some of the handlers within the same realm.\nAny handler, that has a name that does not match the internal handlers\nor the API namespaces is considered to be a library function and is not\nexposed anywhere else, except to the sibling handlers."}),"\n",(0,s.jsx)(n.h2,{id:"folder-structure",children:"Folder structure"}),"\n",(0,s.jsx)(n.p,{children:"The handlers and library functions are grouped together and given a name.\nThis happens by defining them in a sub-folder within the realm folder.\nThis folder is usually in another one, which is used for defining a layer.\nThe most common approach is to create a separate file for each handler and\nuse the handler name as file name. This serves multiple reasons:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["allow fast finding of handlers within code editors. For example\nin VSCode ctrl+p and then typing the first letters of the semantic\ntriple will bring the desired handler (i.e. ",(0,s.jsx)(n.code,{children:"ctrl+p uua"})," is likely to find ",(0,s.jsx)(n.code,{children:"userUserAdd.ts"}),")"]}),"\n",(0,s.jsx)(n.li,{children:"easier code review by avoiding files with thousands of rows and a lot of nesting"}),"\n",(0,s.jsx)(n.li,{children:"better isolation between the handlers"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The group name is in the format ",(0,s.jsx)(n.code,{children:"realmname.foldername"}),".\nThis name is then used in the ",(0,s.jsx)(n.code,{children:"imports"})," property in the adapters and orchestrators."]}),"\n",(0,s.jsxs)(n.p,{children:["Let's imagine a realm named ",(0,s.jsx)(n.code,{children:"example"})," which implements a namespace ",(0,s.jsx)(n.code,{children:"math"})," with\nseveral methods for calculating the sum and the average of an array of integer numbers.\nTo do so, it defines a library function ",(0,s.jsx)(n.code,{children:"sum"})," and handlers ",(0,s.jsx)(n.code,{children:"mathNumberSum"})," and\n",(0,s.jsx)(n.code,{children:"mathNumberAverage"}),". It attaches the handlers to an orchestrator ",(0,s.jsx)(n.code,{children:"mathDispatch"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"The following structure is be used:"}),"\n",(0,s.jsx)("pre",{children:(0,s.jsx)(n.p,{children:"\ud83d\udcc1 example\n\u251c\u2500\u2500\ud83d\udcc1 orchestrator\n|   \u251c\u2500\u2500\ud83d\udcc1 math\n|   |   \u251c\u2500\u2500 error.ts\n|   |   \u251c\u2500\u2500 sum.ts\n|   |   \u251c\u2500\u2500 mathNumberSum.ts\n|   |   \u2514\u2500\u2500 mathNumberAverage.ts\n|   \u2514\u2500\u2500 mathDispatch.ts\n\u2514\u2500\u2500 server.ts"})}),"\n",(0,s.jsx)(n.h2,{id:"defining-handlers-and-library-functions",children:"Defining handlers and library functions"}),"\n",(0,s.jsx)(n.p,{children:"To enable interoperability between the handlers, library functions,\norchestrators, adapters and the framework, a specific pattern is used\nto define them."}),"\n",(0,s.jsxs)(n.p,{children:["To define a library function, use the ",(0,s.jsx)(n.code,{children:"library"})," function from the framework and\npass a function that returns the desired library function with the appropriate name:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// example/orchestrator/math/sum.ts\nimport {library} from '@feasibleone/blong';\n\nexport default library(api =>\n    function sum(...params: number[]) {\n        // implementation\n    }\n);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["To define a handler, use the ",(0,s.jsx)(n.code,{children:"handler"})," function from the framework and\npass a function that returns the desired handler with the appropriate name:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// example/orchestrator/math/mathNumberSum.ts\nimport {handler} from '@feasibleone/blong';\n\nexport default handler(api =>\n    function mathNumberSum(...params: number[]) {\n        // implementation\n    }\n);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"interoperability",children:"Interoperability"}),"\n",(0,s.jsxs)(n.p,{children:["Handlers and functions can call each other by referring through\nthe ",(0,s.jsx)(n.code,{children:"api"})," parameter. It also allows to access other functions of\nthe framework."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"api"})," parameter has the properties, which are often\nused through destructuring. Check the following example,\nthat explain their usage:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"example/orchestrator/math/error.ts"})," - defines the errors."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {handler} from '@feasibleone/blong';\n\nexport default library(({\n  lib: {\n        error          // framework function for defining typed errors\n  }\n}) => {\n    error({\n        numberInteger: 'Numbers must be integer'\n    })\n});\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"example/orchestrator/math/sum.ts"})," - defines the reusable library function ",(0,s.jsx)(n.code,{children:"sum"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { library } from '@feasibleone/blong';\n\nexport default library(({\n    errors             // access the defined errors\n}) =>\n    function sum(params: number[]) {\n        if (!params.every(Number.isInteger)) throw errors.numberInteger();\n        return params.reduce((prev, cur) => prev + cur, 0);\n    }\n);\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"example/orchestrator/math/mathNumberSum.ts"})," - defines the handler for\ncalculating the sum."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {handler} from '@feasibleone/blong';\n\nexport default handler(({\n    lib: {\n        sum            // user defined library function\n    }\n}) =>\n    function mathNumberSum(params) {\n        return sum(params);\n    }\n);\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"example/orchestrator/math/mathNumberAverage.ts"})," - defines the handler for\ncalculating the average."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {handler} from '@feasibleone/blong';\n\nexport default handler(({\n    config: {\n        precision      // access configuration\n    },\n    handler: {\n        mathNumberSum  // local or remote handler\n    }\n}) => async function mathNumberAverage(numbers: number[], $meta){\n    if (!numbers?.length) return;\n    return ((await mathNumberSum(numbers, $meta)) / numbers.length).toPrecision(precision)\n})\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"example/orchestrator/mathDispatch.ts"})," - defines a\n",(0,s.jsx)(n.a,{href:"./orchestrator#dispatch",children:"dispatch orchestrator"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {orchestrator} from '@feasibleone/blong';\n\nexport default orchestrator(() => ({\n    extends: 'orchestrator.dispatch',\n}));\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"example/server.ts"})," - defines the ",(0,s.jsx)(n.code,{children:"example"})," ",(0,s.jsx)(n.a,{href:"./realm",children:"realm"})," and\nthe default configuration for the orchestrator."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {realm} from '@feasibleone/blong';\n\nexport default realm(() => ({\n    default: {\n        mathDispatch: {\n            namespace: 'number',\n            imports: 'example.number',\n        },\n    },\n    children: ['./orchestrator'],\n    ...rest\n}));\n"})}),"\n"]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},7743:(e,n,r)=>{r.d(n,{Z:()=>l,a:()=>i});var s=r(3981);const a={},t=s.createContext(a);function i(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunk_feasibleone_blong_docs=self.webpackChunk_feasibleone_blong_docs||[]).push([[6529],{1524:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var o=t(9541),a=t(7743);const r={},s="Adapter",c={id:"patterns/adapter",title:"Adapter",description:"Blong includes the following commonly used adapters:",source:"@site/docs/patterns/adapter.md",sourceDirName:"patterns",slug:"/patterns/adapter",permalink:"/blong-docs/docs/patterns/adapter",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Patterns",permalink:"/blong-docs/docs/category/patterns"},next:{title:"Codec",permalink:"/blong-docs/docs/patterns/codec"}},i={},l=[{value:"TCP",id:"tcp",level:2},{value:"HTTP",id:"http",level:2},{value:"Configuration",id:"configuration",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"adapter",children:"Adapter"}),"\n",(0,o.jsx)(n.p,{children:"Blong includes the following commonly used adapters:"}),"\n",(0,o.jsx)(n.h2,{id:"tcp",children:"TCP"}),"\n",(0,o.jsx)(n.p,{children:"Used for stream based adapters"}),"\n",(0,o.jsx)(n.p,{children:"To use them follow this pattern:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"// realmname/adapter/adaptername.ts\nimport { adapter } from '@feasibleone/blong';\n\nexport default adapter<object>(api => ({\n    extends: 'adapter.tcp'\n}));\n"})}),"\n",(0,o.jsx)(n.p,{children:"TCP adapter configuration properties:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"host: hsm.example.com                # host to connect to\nport: 1500                           # port to connect to\nlisten: false                        # set to true to listen for connections\nlocalPort:                           # port to listen for connections\nsocketTimeOut:                       # inactivity disconnect timeout\nmaxConnections:                      # maximum number of connections to accept\nconnectionDropPolicy:                # which connections to drop\nformat:\n  size: 16/integer                   # the format of the size header\nimports: ctp.payshield               # codec name\nctp.payshield:\n  headerFormat: 6/string-left-zero   # codec params\nidleSend: 10000                      # echo interval in milliseconds\nmaxReceiveBuffer: 4096               # maximum size in bytes of a single message\ntls:                                 # TLS config\n  ca: /some/path/ca.crt\n  cert: /some/path/tls.crt\n  key: /some/path/tls.key\n"})}),"\n",(0,o.jsx)(n.h2,{id:"http",children:"HTTP"}),"\n",(0,o.jsx)(n.p,{children:"Used for HTTP based adapters"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"// realmname/adapter/adaptername.ts\nimport { adapter } from '@feasibleone/blong';\n\nexport default adapter<object>(api => ({\n    extends: 'adapter.http'\n}));\n"})}),"\n",(0,o.jsx)(n.p,{children:"HTTP adapter configuration properties:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"url: http://example.com              # Base URL for all requests\ntls:                                 # TLS config\n  ca: /some/path/ca.crt\n  cert: /some/path/tls.crt\n  key: /some/path/tls.key\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["When using OpenAPI/Swagger definitions, make sure to include\n",(0,o.jsx)(n.code,{children:"'codec.openapi'"})," in the ",(0,o.jsx)(n.code,{children:"imports"})," property."]})}),"\n",(0,o.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsx)(n.p,{children:"All adapters share some common configuration properties, such as:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"logLevel"})," - the log level for the adapter"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"namespace"})," - prefixes used to call the adapter API"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"imports"})," - handlers to attach in the adapter"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["See the ",(0,o.jsx)(n.a,{href:"/blong-docs/docs/patterns/configuration",children:"configuration pattern"})," for more details\nabout the places where adapters can be configured."]})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},7743:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>s});var o=t(3981);const a={},r=o.createContext(a);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);
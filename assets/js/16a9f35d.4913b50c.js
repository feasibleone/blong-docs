"use strict";(self.webpackChunk_feasibleone_blong_docs=self.webpackChunk_feasibleone_blong_docs||[]).push([[1982],{8417:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=t(9541),a=t(7743);const s={},o="REST",i={id:"patterns/rest",title:"REST",description:"Server",source:"@site/docs/patterns/rest.md",sourceDirName:"patterns",slug:"/patterns/rest",permalink:"/blong-docs/docs/patterns/rest",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Realm",permalink:"/blong-docs/docs/patterns/realm"},next:{title:"Test",permalink:"/blong-docs/docs/patterns/test"}},l={},c=[{value:"Server",id:"server",level:2},{value:"Client",id:"client",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"rest",children:"REST"}),"\n",(0,r.jsx)(n.h2,{id:"server",children:"Server"}),"\n",(0,r.jsx)(n.p,{children:"To implement REST APIs:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["use the ",(0,r.jsx)(n.code,{children:"api"})," function to define namespaces for each API"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// realmname/gateway/api/clock.ts\nimport {api} from '@feasibleone/blong';\n\nexport default api(() => ({\n    namespace: {\n        clock: [\n            'core/test/api/world-time.json',\n            'core/test/api/world-time.operations.json'\n        ],\n    },\n}));\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This will merge the OpenAPI definitions in the given files into a single\nnamespace ",(0,r.jsx)(n.code,{children:"clock"})," and mount them at ",(0,r.jsx)(n.code,{children:"/rest/"})," path of the gateway. Merging\nis only needed if the original definition is not good enough, for example\nit does not include the ",(0,r.jsx)(n.code,{children:"operationId"})," field or it is not using the desired\nnaming convention."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Implement the handlers, by prefixing the operationId with the namespace.\nOnly paths with HTTP methods that have an ",(0,r.jsx)(n.code,{children:"operationId"})," can have handlers."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// realmname/orchestrator/clock/clockGet.ts\nimport {handler} from '@feasibleone/blong';\n\nexport default handler(\n    () =>\n        async function clockGet() {\n            // implementation\n        }\n);\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"client",children:"Client"}),"\n",(0,r.jsxs)(n.p,{children:["To call REST APIs, use the ",(0,r.jsx)(n.a,{href:"./adapter#http",children:"HTTP adapter"})," and the ",(0,r.jsx)(n.a,{href:"./codec#openapi",children:"OpenAPI codec"}),",\nfor example:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Configure the HTTP adapter in the realm:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// realmname/server.ts\nimport {realm} from '@feasibleone/blong';\n\nexport default realm(blong => ({\n    default: {\n        http: {\n            imports: ['codec.openapi'],\n            namespace: ['time'],\n            'codec.openapi': {\n                namespace: {\n                    time: [\n                        'world-time.json',\n                        'world-time.operations.json'\n                    ]\n                }\n            }\n        }\n    },\n    children: ['./adapter']\n}));\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Implement the HTTP adapter:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// realmname/adapter/http.ts\nimport {adapter} from '@feasibleone/blong';\n\nexport default adapter(() => ({\n    extends: 'adapter.http'\n}));\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Call the API using the adapter namespace concatenated with the operationId:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// realmname/orchestrator/subject/handlerName.ts\nimport {IMeta, handler} from '@feasibleone/blong';\n\nexport default handler(\n    ({handler: {timeGet}}) =>\n        async function handlerName(params, $meta: IMeta) {\n            return timeGet(params, $meta);\n        }\n);\n"})}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},7743:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>o});var r=t(3981);const a={},s=r.createContext(a);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);